//Arrays and String Manipulations

1. Arrays(Implementation) \
2. Whether String has all unique characters\ (Same like permutation, so not done)
3. Reverse a String\
4. Whether s1 is a permutation of s2\
5. Replace all spaces by  "%20"\
6. Compress string aaabbcddeee => a3b2c1d2e3 \
7. Whether s2 is a rotation of s1 => s1=waterbottle, s2=erbottlewat\
8. Stack (Implementation)\
9. Delimiter Check\
10. Numbers with same first and last digit\
11. Sort Array with respect to another array\
12. Find total number of negative nos in row wise/col wise sorted array\
13. Maximum sum of a subarray (O(n)-Kadane's algorithm, Brute force - More than O(n2)\


//Linked List 

1. Remove duplicates from unsorted linked list (with buffer nd without buffer)\
2. Kth to last element in a singly linked list\
3. Linked List reversal (Iterative/Recursive/Stack)\
4. Partition List based on a value x
5. Add two numbers represented as LinkedList and return the sum as LinkedList (both asc/desc)
6. Detect if LinkedList has a loop (Floyd's Algo)
7. To Check if a linked list is a palindrome (Iteravtive and Reverse approach)


//Sorting

1. Bubble Sort\
2. Insertion Sort\
3. Selection Sort\

//Others

1. LRU Cache\
2. Derivative of Polynomial \
